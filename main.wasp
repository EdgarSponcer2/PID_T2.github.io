app ControladoresPID {
  wasp: {
    version: "^0.13.0"
  },
  title: "ControladoresPID",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id             Int             @id @default(autoincrement())
    controlMethods ControlMethod[]
psl=}

entity ControlMethod {=psl
    id               Int               @id @default(autoincrement())
    name             String
    user             User              @relation(fields: [userId], references: [id])
    userId           Int
    tuningParameters TuningParameter[]
psl=}

entity TuningParameter {=psl
    id              Int           @id @default(autoincrement())
    name            String
    value           Float
    controlMethod   ControlMethod @relation(fields: [controlMethodId], references: [id])
    controlMethodId Int
psl=}

action createControlMethod {
  fn: import { createControlMethod } from "@src/actions.js",
  entities: [ControlMethod]
}

action updateControlMethod {
  fn: import { updateControlMethod } from "@src/actions.js",
  entities: [ControlMethod]
}

action createTuningParameter {
  fn: import { createTuningParameter } from "@src/actions.js",
  entities: [TuningParameter, ControlMethod]
}

action updateTuningParameter {
  fn: import { updateTuningParameter } from "@src/actions.js",
  entities: [TuningParameter, ControlMethod]
}

query getControlMethods {
  fn: import { getControlMethods } from "@src/queries.js",
  entities: [ControlMethod]
}

query getControlMethod {
  fn: import { getControlMethod } from "@src/queries.js",
  entities: [ControlMethod]
}

query getTuningParameters {
  fn: import { getTuningParameters } from "@src/queries.js",
  entities: [TuningParameter, ControlMethod]
}

route ControlMethodsRoute { path: "/control-methods", to: ControlMethodsPage }
page ControlMethodsPage {
  component: import ControlMethodsPage from "@src/pages/ControlMethods.jsx",
  authRequired: true
}

route ControlMethodRoute { path: "/control-method/:controlMethodId", to: ControlMethodPage }
page ControlMethodPage {
  component: import ControlMethodPage from "@src/pages/ControlMethod.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}